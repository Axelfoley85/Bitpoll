"""
Django settings for bitpoll project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.contrib import messages

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = os.path.join(ROOT_DIR, '_media')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = os.path.join(ROOT_DIR, '_static')

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = '/static/'

ALLOWED_HOSTS = []

TEMPLATE_ALLOWABLE_SETTINGS_VALUES = [
    'ALLOW_CUSTOM_SLUGS',
    'SITE_NAME',
    'DEBUG',
    'DEFAULT_RANDOM_SLUG',
    'BASE_URL',
    'HOME_URL',
    'HOME_URL_NAME',
    'IMPRINT_TEXT',
    'IMPRINT_URL',
    'TIME_ZONE',
    'REGISTER_ENABLED',
    'MAIL_SIGNATURE',
    'GROUP_MANAGEMENT',
    'PUBLIC_POLLS',
]

LOGIN_REDIRECT_URL = "/"

SITE_NAME = 'Bitpoll'
BASE_URL = 'https://bitpoll.mafiasi.de'

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django-simple-csp',
    'django_markdown',
    'widget_tweaks',
    'static_precompiler',
    'bitpoll.poll',
    'bitpoll.base',
    'bitpoll.invitations',
    'bitpoll.registration',
    'bitpoll.groups',
    'django.contrib.admin',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django-simple-csp.middleware.csp.CSPMiddleware',
]

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'static_precompiler.finders.StaticPrecompilerFinder',
]

ROOT_URLCONF = 'bitpoll.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bitpoll.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# User Model

AUTH_USER_MODEL = 'base.BitpollUser'


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_PRECOMPILER_ROOT = STATIC_ROOT
SASS_PRECISION = 8

ALLOW_CUSTOM_SLUGS = True
DEFAULT_RANDOM_SLUG = 'true'  # this value is an JS true/false

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}

# Url to the Base Homepage and Text on the Link, leave empty to not use this option
HOME_URL = "https://example.com"
HOME_URL_NAME = "Dashboard"

# Test mail functionality by printing mails to console:
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# if the imprint URL is not empty use it as an link to the imprint, else use IMPRINT_TEXT
IMPRINT_URL = ""
IMPRINT_TEXT = """
<h1>Impressum</h1>
<p>Text goes here</p>
"""

LOCALE_PATHS = (os.path.join(ROOT_DIR, 'locale'), )

LANGUAGES = (
    ('de', 'Deutsch'),
    ('en', 'English'),
    #('fr', 'Fran√ßais'),
)

REGISTER_ENABLED = True
GROUP_MANAGEMENT = REGISTER_ENABLED

CSP_REPORT_ONLY = True
CSP_REPORT_URL = ""

MAIL_SIGNATURE = "Bitpoll Team"

TEAM_EMAIL = "mail@example.com"

PUBLIC_POLLS = True

from .settings_local import *

INSTALLED_APPS += INSTALLED_APPS_LOCAL
